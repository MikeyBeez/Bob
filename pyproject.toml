[project]
name = "bob-llm-kernel"
version = "1.0.0"
description = "Bob LLM-as-Kernel Intelligence System"
authors = [
    {name = "Bard", email = "bard@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "aiohappyeyeballs>=2.4.0",
    "aiofiles>=24.1.0",
    "aiohttp>=3.10.5",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "pydantic>=2.8.0",
    "rich>=13.8.0",
    "click>=8.1.7",
    "asyncio-mqtt>=0.11.0",
    "slowapi>=0.1.9",
    "websockets>=11.0",
    "httpx>=0.27.0",
    "python-multipart>=0.0.6",
    "ollama>=0.3.0",
    # sqlite3 is built-in to Python
    "pytest>=8.3.0",
    "pytest-asyncio>=0.23.0",
    "coverage>=7.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.6.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
bob-cli = "bob_cli:main"
bob-api = "bob_api:main"

[project.urls]
Homepage = "https://github.com/yourusername/bob-llm-kernel"
Documentation = "https://github.com/yourusername/bob-llm-kernel#readme"
Repository = "https://github.com/yourusername/bob-llm-kernel"
Issues = "https://github.com/yourusername/bob-llm-kernel/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["core", "intelligence", "interfaces", "integrations"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["core", "intelligence", "interfaces", "integrations"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "ollama",
    "aiohttp",
    "rich.*",
    "slowapi.*",
]
ignore_missing_imports = true
