#!/usr/bin/env python3\n\"\"\"Test Bob's new intelligence system\"\"\"\n\nimport asyncio\nfrom bob_ollama_bridge import BrainSystemFunctionBridge\n\nasync def test_bob_intelligence():\n    \"\"\"Test Bob's enhanced intelligence capabilities.\"\"\"\n    bridge = BrainSystemFunctionBridge()\n    \n    test_messages = [\n        \"What's my system status?\",  # Should trigger intelligence: system intent -> brain_status\n        \"Can you analyze this text for BS: This is definitely the best system ever created!\",  # Should trigger: analysis intent -> detect_bullshit\n        \"Check the Bob project status\",  # Should trigger: development intent -> find_project + git_status\n        \"Please test your tools\"  # Should trigger: testing intent -> TOOL_TEST_REQUEST\n    ]\n    \n    print(\"🧠 Testing Bob's Enhanced Intelligence System\")\n    print(\"=\" * 50)\n    \n    for i, message in enumerate(test_messages, 1):\n        print(f\"\\n🔍 Test {i}: {message}\")\n        print(\"-\" * 40)\n        \n        # Analyze intent\n        intent_analysis = bridge.intelligence.analyze_intent(message)\n        print(f\"Intent: {intent_analysis['primary']} (confidence: {intent_analysis['confidence']:.2f})\")\n        \n        # Generate strategy\n        strategy = bridge.intelligence.generate_smart_response_strategy(intent_analysis, message)\n        print(f\"Tools to execute: {len(strategy['tools']['sequence'])}\")\n        \n        if strategy['tools']['sequence']:\n            for tool in strategy['tools']['sequence']:\n                print(f\"  - {tool.get('tool_name', tool.get('action', 'Unknown'))}: {tool.get('reasoning', 'No reasoning')}\")\n        \n        print(\"\\n\" + \"=\"*50)\n    \n    # Show intelligence summary\n    print(\"\\n🧠 Intelligence System Summary:\")\n    summary = bridge.intelligence.get_intelligence_summary()\n    print(f\"Available intent patterns: {summary['capabilities']['intent_patterns']}\")\n    print(f\"Available tools: {summary['capabilities']['available_tools']}\")\n    print(\"Intelligence features:\")\n    for feature in summary['intelligence_features']:\n        print(f\"  ✅ {feature}\")\n\nif __name__ == \"__main__\":\n    asyncio.run(test_bob_intelligence())\n